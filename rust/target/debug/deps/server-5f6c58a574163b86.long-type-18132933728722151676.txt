InsertStatement<db::challenges::challenges::table, query_builder::insert_statement::ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<db::challenges::challenges::columns::id, &uuid::Uuid>>, DefaultableColumnInsertValue<ColumnInsertValue<db::challenges::challenges::columns::user_id, &diesel::sql_types::Uuid>>, DefaultableColumnInsertValue<ColumnInsertValue<db::challenges::challenges::columns::challenge, diesel::expression::bound::Bound<Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<db::challenges::challenges::columns::created_at, diesel::expression::bound::Bound<diesel::sql_types::Timestamp, &NaiveDateTime>>>), db::challenges::challenges::table>, query_builder::insert_statement::private::Insert, ReturningClause<(db::challenges::challenges::columns::id, db::challenges::challenges::columns::user_id, db::challenges::challenges::columns::challenge, db::challenges::challenges::columns::created_at)>>
