InsertStatement<schema::users::table, query_builder::insert_statement::ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::uuid, diesel::expression::bound::Bound<diesel::sql_types::Uuid, &uuid::Uuid>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::username, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::email, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::mobile, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::public_key, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::user_state, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::created_at, &i64>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::modified_at, &i64>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::users::columns::verified, diesel::expression::bound::Bound<diesel::sql_types::Bool, &bool>>>), schema::users::table>, query_builder::insert_statement::private::Insert, ReturningClause<(schema::users::columns::uuid, schema::users::columns::username, schema::users::columns::email, schema::users::columns::mobile, schema::users::columns::public_key, schema::users::columns::user_state, schema::users::columns::created_at, schema::users::columns::modified_at, schema::users::columns::verified)>>
